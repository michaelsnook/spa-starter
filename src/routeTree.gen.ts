/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as LoginImport } from './routes/login'
import { Route as DashboardImport } from './routes/_dashboard'
import { Route as DashboardSampleImport } from './routes/_dashboard/_sample'
import { Route as DashboardSampleIndexImport } from './routes/_dashboard/_sample/index'
import { Route as DashboardSamplePostsImport } from './routes/_dashboard/_sample/posts'
import { Route as DashboardSampleLayoutImport } from './routes/_dashboard/_sample/_layout'
import { Route as DashboardSamplePostsIndexImport } from './routes/_dashboard/_sample/posts.index'
import { Route as DashboardSamplePostsPostIdImport } from './routes/_dashboard/_sample/posts.$postId'
import { Route as DashboardSampleLayoutLayout2Import } from './routes/_dashboard/_sample/_layout/_layout-2'
import { Route as DashboardSampleLayoutLayout2LayoutBImport } from './routes/_dashboard/_sample/_layout/_layout-2/layout-b'
import { Route as DashboardSampleLayoutLayout2LayoutAImport } from './routes/_dashboard/_sample/_layout/_layout-2/layout-a'

// Create/Update Routes

const LoginRoute = LoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const DashboardRoute = DashboardImport.update({
  id: '/_dashboard',
  getParentRoute: () => rootRoute,
} as any)

const DashboardSampleRoute = DashboardSampleImport.update({
  id: '/_sample',
  getParentRoute: () => DashboardRoute,
} as any)

const DashboardSampleIndexRoute = DashboardSampleIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => DashboardSampleRoute,
} as any)

const DashboardSamplePostsRoute = DashboardSamplePostsImport.update({
  id: '/posts',
  path: '/posts',
  getParentRoute: () => DashboardSampleRoute,
} as any)

const DashboardSampleLayoutRoute = DashboardSampleLayoutImport.update({
  id: '/_layout',
  getParentRoute: () => DashboardSampleRoute,
} as any)

const DashboardSamplePostsIndexRoute = DashboardSamplePostsIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => DashboardSamplePostsRoute,
} as any)

const DashboardSamplePostsPostIdRoute = DashboardSamplePostsPostIdImport.update(
  {
    id: '/$postId',
    path: '/$postId',
    getParentRoute: () => DashboardSamplePostsRoute,
  } as any,
)

const DashboardSampleLayoutLayout2Route =
  DashboardSampleLayoutLayout2Import.update({
    id: '/_layout-2',
    getParentRoute: () => DashboardSampleLayoutRoute,
  } as any)

const DashboardSampleLayoutLayout2LayoutBRoute =
  DashboardSampleLayoutLayout2LayoutBImport.update({
    id: '/layout-b',
    path: '/layout-b',
    getParentRoute: () => DashboardSampleLayoutLayout2Route,
  } as any)

const DashboardSampleLayoutLayout2LayoutARoute =
  DashboardSampleLayoutLayout2LayoutAImport.update({
    id: '/layout-a',
    path: '/layout-a',
    getParentRoute: () => DashboardSampleLayoutLayout2Route,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_dashboard': {
      id: '/_dashboard'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof DashboardImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/_dashboard/_sample': {
      id: '/_dashboard/_sample'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof DashboardSampleImport
      parentRoute: typeof DashboardImport
    }
    '/_dashboard/_sample/_layout': {
      id: '/_dashboard/_sample/_layout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof DashboardSampleLayoutImport
      parentRoute: typeof DashboardSampleImport
    }
    '/_dashboard/_sample/posts': {
      id: '/_dashboard/_sample/posts'
      path: '/posts'
      fullPath: '/posts'
      preLoaderRoute: typeof DashboardSamplePostsImport
      parentRoute: typeof DashboardSampleImport
    }
    '/_dashboard/_sample/': {
      id: '/_dashboard/_sample/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof DashboardSampleIndexImport
      parentRoute: typeof DashboardSampleImport
    }
    '/_dashboard/_sample/_layout/_layout-2': {
      id: '/_dashboard/_sample/_layout/_layout-2'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof DashboardSampleLayoutLayout2Import
      parentRoute: typeof DashboardSampleLayoutImport
    }
    '/_dashboard/_sample/posts/$postId': {
      id: '/_dashboard/_sample/posts/$postId'
      path: '/$postId'
      fullPath: '/posts/$postId'
      preLoaderRoute: typeof DashboardSamplePostsPostIdImport
      parentRoute: typeof DashboardSamplePostsImport
    }
    '/_dashboard/_sample/posts/': {
      id: '/_dashboard/_sample/posts/'
      path: '/'
      fullPath: '/posts/'
      preLoaderRoute: typeof DashboardSamplePostsIndexImport
      parentRoute: typeof DashboardSamplePostsImport
    }
    '/_dashboard/_sample/_layout/_layout-2/layout-a': {
      id: '/_dashboard/_sample/_layout/_layout-2/layout-a'
      path: '/layout-a'
      fullPath: '/layout-a'
      preLoaderRoute: typeof DashboardSampleLayoutLayout2LayoutAImport
      parentRoute: typeof DashboardSampleLayoutLayout2Import
    }
    '/_dashboard/_sample/_layout/_layout-2/layout-b': {
      id: '/_dashboard/_sample/_layout/_layout-2/layout-b'
      path: '/layout-b'
      fullPath: '/layout-b'
      preLoaderRoute: typeof DashboardSampleLayoutLayout2LayoutBImport
      parentRoute: typeof DashboardSampleLayoutLayout2Import
    }
  }
}

// Create and export the route tree

interface DashboardSampleLayoutLayout2RouteChildren {
  DashboardSampleLayoutLayout2LayoutARoute: typeof DashboardSampleLayoutLayout2LayoutARoute
  DashboardSampleLayoutLayout2LayoutBRoute: typeof DashboardSampleLayoutLayout2LayoutBRoute
}

const DashboardSampleLayoutLayout2RouteChildren: DashboardSampleLayoutLayout2RouteChildren =
  {
    DashboardSampleLayoutLayout2LayoutARoute:
      DashboardSampleLayoutLayout2LayoutARoute,
    DashboardSampleLayoutLayout2LayoutBRoute:
      DashboardSampleLayoutLayout2LayoutBRoute,
  }

const DashboardSampleLayoutLayout2RouteWithChildren =
  DashboardSampleLayoutLayout2Route._addFileChildren(
    DashboardSampleLayoutLayout2RouteChildren,
  )

interface DashboardSampleLayoutRouteChildren {
  DashboardSampleLayoutLayout2Route: typeof DashboardSampleLayoutLayout2RouteWithChildren
}

const DashboardSampleLayoutRouteChildren: DashboardSampleLayoutRouteChildren = {
  DashboardSampleLayoutLayout2Route:
    DashboardSampleLayoutLayout2RouteWithChildren,
}

const DashboardSampleLayoutRouteWithChildren =
  DashboardSampleLayoutRoute._addFileChildren(
    DashboardSampleLayoutRouteChildren,
  )

interface DashboardSamplePostsRouteChildren {
  DashboardSamplePostsPostIdRoute: typeof DashboardSamplePostsPostIdRoute
  DashboardSamplePostsIndexRoute: typeof DashboardSamplePostsIndexRoute
}

const DashboardSamplePostsRouteChildren: DashboardSamplePostsRouteChildren = {
  DashboardSamplePostsPostIdRoute: DashboardSamplePostsPostIdRoute,
  DashboardSamplePostsIndexRoute: DashboardSamplePostsIndexRoute,
}

const DashboardSamplePostsRouteWithChildren =
  DashboardSamplePostsRoute._addFileChildren(DashboardSamplePostsRouteChildren)

interface DashboardSampleRouteChildren {
  DashboardSampleLayoutRoute: typeof DashboardSampleLayoutRouteWithChildren
  DashboardSamplePostsRoute: typeof DashboardSamplePostsRouteWithChildren
  DashboardSampleIndexRoute: typeof DashboardSampleIndexRoute
}

const DashboardSampleRouteChildren: DashboardSampleRouteChildren = {
  DashboardSampleLayoutRoute: DashboardSampleLayoutRouteWithChildren,
  DashboardSamplePostsRoute: DashboardSamplePostsRouteWithChildren,
  DashboardSampleIndexRoute: DashboardSampleIndexRoute,
}

const DashboardSampleRouteWithChildren = DashboardSampleRoute._addFileChildren(
  DashboardSampleRouteChildren,
)

interface DashboardRouteChildren {
  DashboardSampleRoute: typeof DashboardSampleRouteWithChildren
}

const DashboardRouteChildren: DashboardRouteChildren = {
  DashboardSampleRoute: DashboardSampleRouteWithChildren,
}

const DashboardRouteWithChildren = DashboardRoute._addFileChildren(
  DashboardRouteChildren,
)

export interface FileRoutesByFullPath {
  '': typeof DashboardSampleLayoutLayout2RouteWithChildren
  '/login': typeof LoginRoute
  '/posts': typeof DashboardSamplePostsRouteWithChildren
  '/': typeof DashboardSampleIndexRoute
  '/posts/$postId': typeof DashboardSamplePostsPostIdRoute
  '/posts/': typeof DashboardSamplePostsIndexRoute
  '/layout-a': typeof DashboardSampleLayoutLayout2LayoutARoute
  '/layout-b': typeof DashboardSampleLayoutLayout2LayoutBRoute
}

export interface FileRoutesByTo {
  '': typeof DashboardSampleLayoutLayout2RouteWithChildren
  '/login': typeof LoginRoute
  '/': typeof DashboardSampleIndexRoute
  '/posts/$postId': typeof DashboardSamplePostsPostIdRoute
  '/posts': typeof DashboardSamplePostsIndexRoute
  '/layout-a': typeof DashboardSampleLayoutLayout2LayoutARoute
  '/layout-b': typeof DashboardSampleLayoutLayout2LayoutBRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_dashboard': typeof DashboardRouteWithChildren
  '/login': typeof LoginRoute
  '/_dashboard/_sample': typeof DashboardSampleRouteWithChildren
  '/_dashboard/_sample/_layout': typeof DashboardSampleLayoutRouteWithChildren
  '/_dashboard/_sample/posts': typeof DashboardSamplePostsRouteWithChildren
  '/_dashboard/_sample/': typeof DashboardSampleIndexRoute
  '/_dashboard/_sample/_layout/_layout-2': typeof DashboardSampleLayoutLayout2RouteWithChildren
  '/_dashboard/_sample/posts/$postId': typeof DashboardSamplePostsPostIdRoute
  '/_dashboard/_sample/posts/': typeof DashboardSamplePostsIndexRoute
  '/_dashboard/_sample/_layout/_layout-2/layout-a': typeof DashboardSampleLayoutLayout2LayoutARoute
  '/_dashboard/_sample/_layout/_layout-2/layout-b': typeof DashboardSampleLayoutLayout2LayoutBRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/login'
    | '/posts'
    | '/'
    | '/posts/$postId'
    | '/posts/'
    | '/layout-a'
    | '/layout-b'
  fileRoutesByTo: FileRoutesByTo
  to:
    | ''
    | '/login'
    | '/'
    | '/posts/$postId'
    | '/posts'
    | '/layout-a'
    | '/layout-b'
  id:
    | '__root__'
    | '/_dashboard'
    | '/login'
    | '/_dashboard/_sample'
    | '/_dashboard/_sample/_layout'
    | '/_dashboard/_sample/posts'
    | '/_dashboard/_sample/'
    | '/_dashboard/_sample/_layout/_layout-2'
    | '/_dashboard/_sample/posts/$postId'
    | '/_dashboard/_sample/posts/'
    | '/_dashboard/_sample/_layout/_layout-2/layout-a'
    | '/_dashboard/_sample/_layout/_layout-2/layout-b'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  DashboardRoute: typeof DashboardRouteWithChildren
  LoginRoute: typeof LoginRoute
}

const rootRouteChildren: RootRouteChildren = {
  DashboardRoute: DashboardRouteWithChildren,
  LoginRoute: LoginRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_dashboard",
        "/login"
      ]
    },
    "/_dashboard": {
      "filePath": "_dashboard.tsx",
      "children": [
        "/_dashboard/_sample"
      ]
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/_dashboard/_sample": {
      "filePath": "_dashboard/_sample.tsx",
      "parent": "/_dashboard",
      "children": [
        "/_dashboard/_sample/_layout",
        "/_dashboard/_sample/posts",
        "/_dashboard/_sample/"
      ]
    },
    "/_dashboard/_sample/_layout": {
      "filePath": "_dashboard/_sample/_layout.tsx",
      "parent": "/_dashboard/_sample",
      "children": [
        "/_dashboard/_sample/_layout/_layout-2"
      ]
    },
    "/_dashboard/_sample/posts": {
      "filePath": "_dashboard/_sample/posts.tsx",
      "parent": "/_dashboard/_sample",
      "children": [
        "/_dashboard/_sample/posts/$postId",
        "/_dashboard/_sample/posts/"
      ]
    },
    "/_dashboard/_sample/": {
      "filePath": "_dashboard/_sample/index.tsx",
      "parent": "/_dashboard/_sample"
    },
    "/_dashboard/_sample/_layout/_layout-2": {
      "filePath": "_dashboard/_sample/_layout/_layout-2.tsx",
      "parent": "/_dashboard/_sample/_layout",
      "children": [
        "/_dashboard/_sample/_layout/_layout-2/layout-a",
        "/_dashboard/_sample/_layout/_layout-2/layout-b"
      ]
    },
    "/_dashboard/_sample/posts/$postId": {
      "filePath": "_dashboard/_sample/posts.$postId.tsx",
      "parent": "/_dashboard/_sample/posts"
    },
    "/_dashboard/_sample/posts/": {
      "filePath": "_dashboard/_sample/posts.index.tsx",
      "parent": "/_dashboard/_sample/posts"
    },
    "/_dashboard/_sample/_layout/_layout-2/layout-a": {
      "filePath": "_dashboard/_sample/_layout/_layout-2/layout-a.tsx",
      "parent": "/_dashboard/_sample/_layout/_layout-2"
    },
    "/_dashboard/_sample/_layout/_layout-2/layout-b": {
      "filePath": "_dashboard/_sample/_layout/_layout-2/layout-b.tsx",
      "parent": "/_dashboard/_sample/_layout/_layout-2"
    }
  }
}
ROUTE_MANIFEST_END */
